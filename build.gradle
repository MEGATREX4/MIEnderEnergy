plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {

	maven { url 'https://jitpack.io' }

	maven {
		url = "https://api.modrinth.com/maven"
	}

	maven {
		name "Modmaven"
		url "https://modmaven.dev"
		content {
			includeGroup "appeng"
			includeGroup "dev.technici4n"
			includeGroup "mezz.jei"
		}
	}

	maven { url "https://cursemaven.com" }
	maven { url "https://maven.ladysnake.org/releases" }

}

loom {
	splitEnvironmentSourceSets()

	mods {
		"mienderenergy" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {


	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	modImplementation "maven.modrinth:modern-industrialization:${project.modern_industrialization_version}"
	include(modApi("teamreborn:energy:${project.energy_version}")) {
		transitive = false
	}

	modImplementation "curse.maven:reborncore-237903:4708961"
	modImplementation "curse.maven:techreborn-233564:4708962"

	modImplementation include("io.github.ladysnake:PlayerAbilityLib:${pal_version}")

	modImplementation "maven.modrinth:fzzy-config:${fzzy_config_version}"

	modImplementation "maven.modrinth:botarium:${botarium_version}"

	// Jar-in-jar dependencies (needed for runClient/runServer to work properly)
	modImplementation "maven.modrinth:cloth-config:11.1.136+fabric"
	modImplementation "maven.modrinth:fabric-language-kotlin:1.10.20+kotlin.1.9.24"
	modImplementation "maven.modrinth:patchouli:1.20.1-84.1-fabric"
	modImplementation files("jars/magna-1.10.1+1.20.1.jar")
	modImplementation files("jars/jankson-1.2.3.jar")
	modImplementation files("jars/tomlkt-jvm-0.3.7.jar")
	modImplementation files("jars/atomicfu-jvm-0.24.0.jar")
	modImplementation files("jars/fiber-0.23.0-2.jar")
	modImplementation files("jars/kotlin-reflect-1.9.24.jar")
	modImplementation files("jars/kotlin-stdlib-1.9.24.jar")
	modImplementation files("jars/kotlin-stdlib-jdk7-1.9.24.jar")
	modImplementation files("jars/kotlin-stdlib-jdk8-1.9.24.jar")
	modImplementation files("jars/kotlinx-coroutines-core-jvm-1.8.0.jar")
	modImplementation files("jars/kotlinx-coroutines-jdk8-1.8.0.jar")
	modImplementation files("jars/kotlinx-datetime-jvm-0.5.0.jar")
	modImplementation files("jars/kotlinx-serialization-cbor-jvm-1.6.3.jar")
	modImplementation files("jars/kotlinx-serialization-core-jvm-1.6.3.jar")
	modImplementation files("jars/kotlinx-serialization-json-jvm-1.6.3.jar")
	modImplementation files("jars/omega-config-base-1.0.8-1.17.jar")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
